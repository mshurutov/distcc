---
- name: Check if ansible version is equal or greater than 2.11
  ansible.builtin.fail:
    msg: "Ansible core should be equal or greater than 2.11"
  when: ansible_version.full is ansible.builtin.version('2.11','<')

- name: Check if python is equal or greater than 3
  ansible.builtin.fail:
    msg: "Python should be equal or greater than 3"
  when: ansible_python.version.major is ansible.builtin.version('3','<')

# tasks file for distcc
- name: Install distcc package
  ansible.builtin.package:
    name: "{{ distcc_packages }}"
    state: present
  tags: distcc_install

- name: Check if config dirs exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop: "{{ distcc_config_dirs }}"
  tags: distcc_config

- name: Copy config for distccd unit file
  ansible.builtin.template:
    src: "{{ distcc_templates_dir }}/distcc.service.conf.j2"
    dest: "{{ distcc_service_config }}"
  notify:
    - systemd daemon reload
    - distccd restart
  when: ansible_service_mgr == 'systemd'
  tags: distcc_config

- name: Set distcc environment
  ansible.builtin.blockinfile:
    path: "{{ distcc_env.path }}"
    state: present
    create: true
    block: |
      {% for config_line in distcc_env.lines %}
      {{ config_line }}
      {% endfor %}
  tags: distcc_config
